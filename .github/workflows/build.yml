name: Build Kernel

on:
  workflow_dispatch:

jobs:
  build-kernel:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    strategy:
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Checkout proton-clang
        uses: actions/checkout@v4
        with:
          repository: kdrag0n/proton-clang
          path: toolchain

      - name: Setup PATH
        run: |
          echo "${{ github.workspace }}/toolchain/bin" >> $GITHUB_PATH

      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential bc curl git zip ftp gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi libssl-dev lftp zstd wget libfl-dev python2 python3 libarchive-tools

      - name: Build kernel
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "zeroXone-github"
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s v0.9.5
          rm -rf KernelSU
          git submodule add https://github.com/zeroXone-github/KernelSU.git
          
          export KERNEL_ROOT="$(pwd)"
          git clone https://github.com/zeroXone-two/susfs4ksu.git -b 1.4.2-kernel-5.4
          
          cp ./susfs4ksu/kernel_patches/KernelSU/kernel/sucompat.h ./KernelSU/kernel/
          cp ./susfs4ksu/kernel_patches/50_add_susfs_in_kernel-5.4.patch ./50_add_susfs_in_kernel.patch
          cp ./susfs4ksu/kernel_patches/fs/susfs.c ./fs/
          cp ./susfs4ksu/kernel_patches/include/linux/susfs.h ./include/linux/
          cp ./susfs4ksu/kernel_patches/fs/sus_su.c ./fs/
          cp ./susfs4ksu/kernel_patches/include/linux/sus_su.h ./include/linux/
          
          cd $KERNEL_ROOT/KernelSU && patch -p1 < 10_enable_susfs_for_ksu.patch
          cd $KERNEL_ROOT && patch -p1 < 50_add_susfs_in_kernel.patch
          
          git add .
          git commit -m "Blump up KSU for NonGKI kernel"
          chmod +x ./build_r.sh
          ./build_r.sh buildksu
          mv ../out/ak3/Kernel-*.zip .
          releaseFile=$(set -- Kernel-*.zip; echo "$1")
          echo "RELEASE_FILE=$releaseFile" >> $GITHUB_ENV
          echo "RELEASE_TAG=$(echo $releaseFile | sed -e 's/^Kernel-//' -e 's/.zip$//')" >> $GITHUB_ENV

      - name: Upload kernel
        uses: actions/upload-artifact@v3
        with:
          name: renoir
          path: ${{ env.RELEASE_FILE }}

      - name: Create release
        continue-on-error: true
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          files: ${{ env.RELEASE_FILE }}
          generate_release_notes: true
